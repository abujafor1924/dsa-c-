х╜УчД╢! "Queues" ржбрж╛ржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░ржЯрж┐ ржмрж╛ржВрж▓рж╛рзЯ ржмрж┐рж╕рзНрждрж╛рж░рж┐рждржнрж╛ржмрзЗ ржмрзБржЭрж┐рзЯрзЗ ржжрж┐ржЪрзНржЫрж┐, рж░рж┐рзЯрзЗрж▓-рж▓рж╛ржЗржл ржЙржжрж╛рж╣рж░ржгрж╕рж╣ред

## **ржХрж┐ржЙ (Queue) ржХрж┐?**

ржПржХржЯрж┐ **рж▓рж┐ржирж┐рзЯрж╛рж░ ржбрж╛ржЯрж╛ рж╕рзНржЯрзНрж░рж╛ржХржЪрж╛рж░** ржпрзЗржЦрж╛ржирзЗ ржбрж╛ржЯрж╛ **FIFO (First-In-First-Out)** ржмрж╛ **ржмрж╛ржВрж▓рж╛рзЯ "ржп ржЖржЧрзЗ ржЖрж╕рзЗ, рждрж╛рж░ ржЖржЧрзЗ ржмрзЗрж░рзЛрзЯ"** ржкржжрзНржзрждрж┐рждрзЗ ржпрзЛржЧ ржПржмржВ ржЕржкрж╕рж╛рж░ржг ржХрж░рж╛ рж╣рзЯред

## **ржХрж┐ржЙ-ржПрж░ ржорзВрж▓ ржирзАрждрж┐: FIFO**

- **ржкрзНрж░ржержорзЗ** ржпрзЗржЯрж┐ ржХрж┐ржЙ-рждрзЗ ржврзБржХржмрзЗ, рж╕рзЗржЯрж┐ржЗ **ржкрзНрж░ржержорзЗ** ржмрзЗрж░ рж╣ржмрзЗред
- ржпрзЗржоржи: ржЯрж┐ржХрж┐ржЯ ржХрж╛ржЙржирзНржЯрж╛рж░рзЗ рж▓рж╛ржЗржи - ржпрж┐ржирж┐ ржкрзНрж░ржержорзЗ рж▓рж╛ржЗржирзЗ ржжрж╛ржБрзЬрж╛ржмрзЗржи, рждрж┐ржирж┐ржЗ ржкрзНрж░ржержорзЗ ржЯрж┐ржХрж┐ржЯ ржкрж╛ржмрзЗржиред

---

## **ржХрж┐ржЙ-ржПрж░ ржЕржкрж╛рж░рзЗрж╢ржи (Operations)**

### **рзз. Enqueue (ржпрзЛржЧ ржХрж░рж╛)**
- ржХрж┐ржЙ-ржПрж░ **ржкрж┐ржЫржирзЗ (Rear)** ржирждрзБржи ржбрж╛ржЯрж╛ ржпрзЛржЧ ржХрж░рж╛ред
- **ржмрж╛ржВрж▓рж╛рзЯ:** "рж▓рж╛ржЗржирзЗ ржирждрзБржи ржмрзНржпржХрзНрждрж┐ ржжрж╛ржБрзЬрж╛ржирзЛ"

### **рзи. Dequeue (ржЕржкрж╕рж╛рж░ржг)**
- ржХрж┐ржЙ-ржПрж░ **рж╕рж╛ржоржирзЗ (Front)** ржерзЗржХрзЗ ржбрж╛ржЯрж╛ ржмрзЗрж░ ржХрж░рзЗ ржирзЗржУрзЯрж╛ред
- **ржмрж╛ржВрж▓рж╛рзЯ:** "рж▓рж╛ржЗржи ржерзЗржХрзЗ ржкрзНрж░ржержо ржмрзНржпржХрзНрждрж┐ржХрзЗ рж╕рж╛рж░рзНржнрж┐рж╕ ржжрзЗржУрзЯрж╛"

### **рзй. Front/Peek (ржжрзЗржЦрж╛)**
- ржХрж┐ржЙ-ржПрж░ рж╕рж╛ржоржирзЗрж░ ржбрж╛ржЯрж╛ржЯрж┐ ржжрзЗржЦрзЗ ржирзЗржУрзЯрж╛ (ржмрзЗрж░ ржирж╛ ржХрж░рзЗ)ред
- **ржмрж╛ржВрж▓рж╛рзЯ:** "ржкрж░ржмрж░рзНрждрзА ржХрж╛ржХрзЗ рж╕рж╛рж░рзНржнрж┐рж╕ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ ржжрзЗржЦрзЗ ржирзЗржУрзЯрж╛"

### **рзк. IsEmpty (ржЦрж╛рж▓рж┐ ржХрж┐ ржирж╛)**
- ржХрж┐ржЙ ржЦрж╛рж▓рж┐ ржХрж┐ ржирж╛ ржЪрзЗржХ ржХрж░рж╛ред
- **ржмрж╛ржВрж▓рж╛рзЯ:** "рж▓рж╛ржЗржирзЗ ржХрзЗржЙ ржЖржЫрзЗ ржХрж┐ ржирж╛ ржжрзЗржЦрж╛"

### **рзл. IsFull (ржкрзВрж░рзНржг ржХрж┐ ржирж╛)**
- ржХрж┐ржЙ ржкрзВрж░рзНржг ржХрж┐ ржирж╛ ржЪрзЗржХ ржХрж░рж╛ (Array implementation-ржП)ред

---

## **рж░рж┐рзЯрзЗрж▓-рж▓рж╛ржЗржл ржЙржжрж╛рж╣рж░ржг**

### **рзз. ржЯрж┐ржХрж┐ржЯ ржХрж╛ржЙржирзНржЯрж╛рж░ (Bus/Train/Movie)**
```
рж▓рж╛ржЗржи: [рж░рж╣рж┐ржо] тЖТ [ржХрж░рж┐ржо] тЖТ [рж╕рзБржоржи] тЖТ [рж░рж┐рждрж╛]
```
- **рж░рж╣рж┐ржо** ржкрзНрж░ржержорзЗ ржжрж╛ржБрзЬрж┐рзЯрзЗржЫрзЗржи, рждрж┐ржирж┐ржЗ ржкрзНрж░ржержорзЗ ржЯрж┐ржХрж┐ржЯ ржкрж╛ржмрзЗржи
- ржирждрзБржи ржХрзЗржЙ ржПрж▓рзЗ (**Enqueue**) рж╕рзЗ рж▓рж╛ржЗржирзЗрж░ рж╢рзЗрж╖рзЗ ржжрж╛ржБрзЬрж╛ржмрзЗ
- ржЯрж┐ржХрж┐ржЯ ржжрзЗржУрзЯрж╛ рж╣рж▓рзЗ (**Dequeue**) рж╕рж╛ржоржирзЗрж░ ржмрзНржпржХрзНрждрж┐ ржмрзЗрж░ рж╣рзЯрзЗ ржпрж╛ржмрзЗржи

### **рзи. ржХрж▓ рж╕рзЗржирзНржЯрж╛рж░ (Call Center)**
```
ржХрж▓рзЗрж░ рждрж╛рж▓рж┐ржХрж╛: [ржХрж▓-рззрзжрзз] тЖТ [ржХрж▓-рззрзжрзи] тЖТ [ржХрж▓-рззрзжрзй]
```
- ржпрзЗ ржХрж▓ ржкрзНрж░ржержо ржЖрж╕ржмрзЗ, рждрж╛рж░ рж╕рзЗржмрж╛ ржкрзНрж░ржержорзЗ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ
- ржирждрзБржи ржХрж▓ ржПрж▓рзЗ рждрж╛ рждрж╛рж▓рж┐ржХрж╛рж░ рж╢рзЗрж╖рзЗ ржпрзБржХрзНржд рж╣ржмрзЗ
- ржПржЬрзЗржирзНржЯ ржлрзНрж░рж┐ рж╣рж▓рзЗ рждрж╛рж▓рж┐ржХрж╛рж░ ржкрзНрж░ржержо ржХрж▓ржЯрж┐ ржирж┐ржмрзЗржи

### **рзй. ржкрзНрж░рж┐ржирзНржЯрж╛рж░ ржХрж┐ржЙ (Printer Queue)**
```
ржкрзНрж░рж┐ржирзНржЯ ржЬржм: [ржбржХ-рзз] тЖТ [ржбржХ-рзи] тЖТ [ржбржХ-рзй]
```
- ржпрзЗ ржбржХрзБржорзЗржирзНржЯ ржкрзНрж░ржержо ржкрзНрж░рж┐ржирзНржЯрзЗрж░ ржЬржирзНржп ржкрж╛ржарж╛ржирзЛ рж╣ржмрзЗ, рж╕рзЗржЯрж┐ ржкрзНрж░ржержорзЗ ржкрзНрж░рж┐ржирзНржЯ рж╣ржмрзЗ
- ржирждрзБржи ржкрзНрж░рж┐ржирзНржЯ ржЬржм ржПрж▓рзЗ рждрж╛ ржХрж┐ржЙ-ржПрж░ рж╢рзЗрж╖рзЗ ржпрзБржХрзНржд рж╣ржмрзЗ
- ржкрзНрж░рж┐ржирзНржЯрж╛рж░ ржПржХржЯрж┐ ржХрж╛ржЬ рж╢рзЗрж╖ ржХрж░рж▓рзЗ ржкрж░ржмрж░рзНрждрзА ржХрж╛ржЬ ржирзЗржмрзЗ

### **рзк. рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ ржЕрзНржпрж╛ржкрзЯрзЗржирзНржЯржорзЗржирзНржЯ**
```
рж░рзЛржЧрзАрж░ рж▓рж╛ржЗржи: [ржорж┐. ржЖрж╣ржорзЗржж] тЖТ [ржорж┐рж╕рзЗрж╕ ржЖржХрзНрждрж╛рж░] тЖТ [рж╢рж┐рж╢рзБ ржмрж╛ржмрзБ]
```
- ржпрж╛рж░ ржЕрзНржпрж╛ржкрзЯрзЗржирзНржЯржорзЗржирзНржЯ рж╕ржорзЯржорждрзЛ ржЖрж╕ржмрзЗ, рж╕рзЗ ржкрзНрж░ржержорзЗ ржбрж╛ржХрзНрждрж╛рж░ ржжрзЗржЦржмрзЗ
- ржЬрж░рзБрж░рж┐ ржХрзЗрж╕ ржЫрж╛рзЬрж╛ рж╕рж╛ржзрж╛рж░ржгржд FIFO ржирж┐рзЯржорзЗ ржХрж╛ржЬ рж╣рзЯ

---

## **ржХрж┐ржЙ ржЗржоржкрзНрж▓рж┐ржорзЗржирзНржЯрзЗрж╢ржи (Code Example - Simple)**

```c
#include <stdio.h>
#define SIZE 5

int queue[SIZE];
int front = -1, rear = -1;

// Enqueue Operation
void enqueue(int value) {
    if(rear == SIZE-1) {
        printf("Queue is Full!\n");
    } else {
        if(front == -1) front = 0;
        rear++;
        queue[rear] = value;
        printf("%d added to queue\n", value);
    }
}

// Dequeue Operation  
int dequeue() {
    if(front == -1) {
        printf("Queue is Empty!\n");
        return -1;
    } else {
        int value = queue[front];
        front++;
        if(front > rear) { // Reset when queue becomes empty
            front = rear = -1;
        }
        return value;
    }
}

// Display Queue
void display() {
    if(front == -1) {
        printf("Queue is Empty!\n");
    } else {
        printf("Queue: ");
        for(int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}
```

---

## **ржХрж┐ржЙ-ржПрж░ ржкрзНрж░ржХрж╛рж░ржнрзЗржж**

### **рзз. Simple Queue (рж╕рж╛ржзрж╛рж░ржг ржХрж┐ржЙ)**
- рж╕рж╛ржзрж╛рж░ржг FIFO ржирзАрждрж┐
- ржЙржкрж░рзЗрж░ рж╕ржм ржЙржжрж╛рж╣рж░ржг рж╕рж╛ржзрж╛рж░ржг ржХрж┐ржЙ

### **рзи. Circular Queue (ржмрзГрждрзНрждрж╛ржХрж╛рж░ ржХрж┐ржЙ)**
- ржорзЗржорж░рж┐ ржмрзНржпржмрж╣рж╛рж░ ржЕржкржЯрж┐ржорж╛ржЗржЬржб
- рж╢рзЗрж╖ рж╕рзЗрж▓рзЗрж░ ржкрж░ ржкрзНрж░ржержо рж╕рзЗрж▓рзЗ ржлрж┐рж░рзЗ ржпрж╛рзЯ
- **ржЙржжрж╛рж╣рж░ржг:** рж░рзЗрж╕рзНржЯрзБрж░рзЗржирзНржЯрзЗ рж░рзЛржЯрзЗржЯрж┐ржВ рж╕рзБрж╢рж┐ ржмрзЗрж▓рзНржЯ

### **рзй. Priority Queue (ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░ ржХрж┐ржЙ)**
- FIFO ржирж╛, Priority ржЕржирзБржпрж╛рзЯрзА ржХрж╛ржЬ
- **ржЙржжрж╛рж╣рж░ржг:** рж╣рж╛рж╕ржкрж╛рждрж╛рж▓рзЗ ржЬрж░рзБрж░рж┐ рж░рзЛржЧрзАржХрзЗ ржЕржЧрзНрж░рж╛ржзрж┐ржХрж╛рж░

### **рзк. Double Ended Queue (Deque)**
- рж╕рж╛ржоржирзЗ ржУ ржкрж┐ржЫржи ржжрзБржЗ ржжрж┐ржХ ржерзЗржХрзЗ Insert/Delete ржХрж░рж╛ ржпрж╛рзЯ
- **ржЙржжрж╛рж╣рж░ржг:** ржЯрзНрж░рж╛ржлрж┐ржХ ржХржирзНржЯрзНрж░рзЛрж▓ ржпрзЗржЦрж╛ржирзЗ рж╕рж╛ржоржирзЗ-ржкрж┐ржЫржи ржЧрж╛рзЬрж┐ ржпрзБржХрзНржд рж╣рждрзЗ ржкрж╛рж░рзЗ

---

## **ржХрж┐ржЙ-ржПрж░ ржмрзНржпржмрж╣рж╛рж░**

- **CPU Scheduling** - ржкрзНрж░рж╕рзЗрж╕ рж╢рж┐ржбрж┐ржЙрж▓рж┐ржВ
- **Breadth First Search (BFS)** - ржЧрзНрж░рж╛ржл ржЯрзНрж░рж╛ржнрж╛рж░рзНрж╕рж╛рж▓
- **Buffer Management** - ржбрж╛ржЯрж╛ ржЯрзНрж░рж╛ржирзНрж╕ржлрж╛рж░рзЗ
- **Router Packet Management** - ржирзЗржЯржУрзЯрж╛рж░рзНржХрж┐ржВ

---

## **рж╕рж╛рж░рж╕ржВржХрзНрж╖рзЗржк**

| ржЯрж╛рж░рзНржо | ржмрж╛ржВрж▓рж╛ ржЕрж░рзНрже | ржЙржжрж╛рж╣рж░ржг |
|-------|-------------|---------|
| **Queue** | рж╕рж╛рж░рж┐/рж▓рж╛ржЗржи | ржЯрж┐ржХрж┐ржЯ ржХрж╛ржЙржирзНржЯрж╛рж░рзЗрж░ рж▓рж╛ржЗржи |
| **Enqueue** | рж▓рж╛ржЗржирзЗ ржпрзЛржЧ ржХрж░рж╛ | ржирждрзБржи ржмрзНржпржХрзНрждрж┐ рж▓рж╛ржЗржирзЗ ржжрж╛ржБрзЬрж╛ржирзЛ |
| **Dequeue** | рж▓рж╛ржЗржи ржерзЗржХрзЗ ржмрзЗрж░ ржХрж░рж╛ | ржкрзНрж░ржержо ржмрзНржпржХрзНрждрж┐ржХрзЗ рж╕рж╛рж░рзНржнрж┐рж╕ ржжрзЗржУрзЯрж╛ |
| **Front** | рж╕рж╛ржоржирзЗрж░ ржбрж╛ржЯрж╛ | ржкрж░ржмрж░рзНрждрзА ржЧрзНрж░рж╛рж╣ржХ ржХрзЗ? |
| **Rear** | ржкрж┐ржЫржирзЗрж░ ржбрж╛ржЯрж╛ | рж╕рж░рзНржмрж╢рзЗрж╖ ржЧрзНрж░рж╛рж╣ржХ ржХрзЗ? |

**ржХрж┐ржЙ = ржирзНржпрж╛ржпрзНржпрждрж╛рж░ ржкрзНрж░рждрзАржХ!** ржпрзЗ ржЖржЧрзЗ ржЖрж╕ржмрзЗ, рждрж╛рж░ рж╕рзЗржмрж╛ ржЖржЧрзЗ! ЁЯОп